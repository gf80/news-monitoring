from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, BotCommand
from aiogram.filters import Command
from storage.database import get_unsent_news, update_subscribe_user, get_mailings_users, update_sent_news, add_user
from config import BOT_TOKEN

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def cmd_start(message: Message):
    WELCOME_MESSAGE = (
    f"üëã *–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!* –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *–ù–æ–≤–æ—Å—Ç–∏ –õ–µ—Ä–º–æ–Ω—Ç–æ–≤* üì∞\n\n"
    "üìå –ó–¥–µ—Å—å —Ç—ã –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –≤–∞–∂–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –ø—Ä—è–º–æ –≤ Telegram.\n\n"
    "‚ö° *–ö–∞–∫ –Ω–∞—á–∞—Ç—å?*\n"
    "   ‚û°Ô∏è –ß—Ç–æ–±—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π ‚Äî –∂–º–∏ /subscribe\n"
    "   ‚û°Ô∏è –ß—Ç–æ–±—ã –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è ‚Äî –∂–º–∏ /unsubscribe\n\n"
    "üí° –°–æ–≤–µ—Ç—ã:\n"
    "   ‚Ä¢ –ù–æ–≤–æ—Å—Ç–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç *–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏*, –Ω–∏—á–µ–≥–æ –Ω–∞–∂–∏–º–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ.\n"
    "   ‚Ä¢ –ú–æ–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è —Å–Ω–æ–≤–∞ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç.\n"
    "   ‚Ä¢ –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é –∏–ª–∏ –Ω–æ–≤—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –≤ —á–∞—Ç.\n\n"
    "üöÄ *–ü–æ–¥–∫–ª—é—á–∞–π—Å—è –∫ –ø–æ–¥–ø–∏—Å–∫–µ –∏ –±—É–¥—å –≤ –∫—É—Ä—Å–µ —Å–æ–±—ã—Ç–∏–π!*"
)
    await message.answer(WELCOME_MESSAGE, parse_mode="Markdown")
    add_user(message.from_user.id, message.from_user.username)


@dp.message(Command("subscribe"))
async def cmd_subscribe(message: Message):
    update_subscribe_user(message.from_user.id, True)
    await message.answer("üîî –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π!")


@dp.message(Command("unsubscribe"))
async def cmd_unsubscribe(message: Message):
    update_subscribe_user(message.from_user.id, False)
    await message.answer("üîï –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —Ä–∞—Å—Å—ã–ª–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π!")


async def check_and_notify():
    unsent_news = get_unsent_news()
    mailings_users = get_mailings_users()

    if not unsent_news or not mailings_users:
        return

    for news_id, title, link, date_published in unsent_news:
        text = f"*üì∞ {title}*\nüìÖ {date_published}\nüîó [–ß–∏—Ç–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å]({link})"
        
        for user_id, username, mailings in mailings_users:
            try:
                await bot.send_message(user_id, text, parse_mode="Markdown")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

        # –ü–æ—Å–ª–µ —Ä–∞—Å—Å—ã–ª–∫–∏ –ø–æ–º–µ—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç—å –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é
        update_sent_news(news_id)